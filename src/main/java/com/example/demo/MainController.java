package com.example.demo;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.PathVariable;
// imports for use List, Map, String and Object
// import java.util.List;
// import java.util.Map;
import java.lang.String;
// import java.lang.Object;

// import org.springframework.jdbc.core.JdbcTemplate;

@Controller	// This means that this class is a Controller
@RequestMapping(path="/") // This means URL's start with /demo (after Application path)
public class MainController {
	@Autowired // This means to get the bean called userRepository
			   // Which is auto-generated by Spring, we will use it to handle the data
	private CursoRepository cursoRepository;

    @GetMapping(path="/")
    public @ResponseBody String home() {return "ARIEL - ariel nu√±ez cruz";}

    @GetMapping(path="/codigo")
    public @ResponseBody String codigo() {return "ARIEL";}

    @GetMapping(path="/nombre-completo")
    public @ResponseBody String nombre() {return "ariel nu\u00F1ez cruz";}









	// @Autowired
  	// private JdbcTemplate jdbcTemplate;


    @GetMapping(path="api/cusro/listar")
	public @ResponseBody Iterable<Curso> getAllUsers() {
		return cursoRepository.findAll();
	}

	@PostMapping(path="api/curso/nuevo") // Map ONLY POST Requests
	public @ResponseBody String addNewUser (@RequestParam String nombre
			, @RequestParam Integer creditos) {
		Curso n = new Curso();
		n.setName(nombre);
		n.setCreditos(creditos);
		cursoRepository.save(n);
		return "Curso Guardado";
	}

	@DeleteMapping(path="api/curso/eliminar")
	public @ResponseBody String delUser (@RequestParam Integer id) {
		Curso n = new Curso();
		n.setId(id);
		cursoRepository.delete(n);
		return "Curso eliminado";
	}

	


	

	


	// @GetMapping(path="/get/report")
	// public @ResponseBody List<Map<String, Object>> getReport() {
	// 	List<Map<String, Object>> queryResult = jdbcTemplate.queryForList("SELECT CONCAT(name, ' ==> ', email) as mycol FROM user");
	// 	return queryResult;
	// }


}
